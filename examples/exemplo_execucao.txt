=== EXEMPLO DE EXECUÇÃO DO SIMULADOR ALGORITMO CLOCK ===

$ ./bin/clock_simulator

=== SIMULADOR ALGORITMO CLOCK (SEGUNDA CHANCE) ===
Desenvolvido para Sistemas Operacionais - UFJF
Tema 28: Algoritmo de Substituição de Página

1. Configurar parâmetros de memória
2. Executar simulação interativa  
3. Executar teste automático
4. Visualizar estatísticas
5. Sair

Escolha uma opção: 1

=== CONFIGURAÇÃO DE PARÂMETROS ===
Digite o número de frames na memória física (3-10): 3
Configuração salva: 3 frames de memória física

Escolha uma opção: 2

=== SIMULAÇÃO INTERATIVA ===
Memória configurada: 3 frames
Digite as páginas a serem referenciadas (digite -1 para sair):

Página: 1
Referência: 1 | Status: MISS (Page Fault)
Memória: [1*] [ ] [ ] | Clock: 1 | Faults: 1, Hits: 0

Página: 2  
Referência: 2 | Status: MISS (Page Fault)
Memória: [1*] [2*] [ ] | Clock: 2 | Faults: 2, Hits: 0

Página: 3
Referência: 3 | Status: MISS (Page Fault)  
Memória: [1*] [2*] [3*] | Clock: 0 | Faults: 3, Hits: 0

Página: 4
Referência: 4 | Status: MISS (Page Fault)
Clock verifica frame 0: página 1, bit=1 → limpando bit, avançando
Clock verifica frame 1: página 2, bit=1 → limpando bit, avançando  
Clock verifica frame 2: página 3, bit=1 → limpando bit, avançando
Clock verifica frame 0: página 1, bit=0 → substituindo
Memória: [4*] [2 ] [3 ] | Clock: 1 | Faults: 4, Hits: 0

Página: 1
Referência: 1 | Status: MISS (Page Fault)
Clock verifica frame 1: página 2, bit=0 → substituindo
Memória: [4*] [1*] [3 ] | Clock: 2 | Faults: 5, Hits: 0

Página: 2
Referência: 2 | Status: MISS (Page Fault)
Clock verifica frame 2: página 3, bit=0 → substituindo  
Memória: [4*] [1*] [2*] | Clock: 0 | Faults: 6, Hits: 0

Página: 4
Referência: 4 | Status: HIT
Página 4 encontrada no frame 0, marcando bit de referência
Memória: [4*] [1*] [2*] | Clock: 0 | Faults: 6, Hits: 1

Página: -1

=== ESTATÍSTICAS FINAIS ===
Total de referências: 7
Page Faults: 6
Hits: 1  
Taxa de Page Fault: 85.71%
Taxa de Hit: 14.29%

Simulação concluída!

Escolha uma opção: 3

=== TESTE AUTOMÁTICO ===
Executando Teste 1: Sequência Básica
Memória: 3 frames | Sequência: 1 2 3 4 1 2 5 1 2 3 4 5

Step 1: Ref=1 | MISS | [1*][ ][ ] | Clock=1 | Faults=1
Step 2: Ref=2 | MISS | [1*][2*][ ] | Clock=2 | Faults=2  
Step 3: Ref=3 | MISS | [1*][2*][3*] | Clock=0 | Faults=3
Step 4: Ref=4 | MISS | [4*][2 ][3 ] | Clock=1 | Faults=4
Step 5: Ref=1 | MISS | [4*][1*][3 ] | Clock=2 | Faults=5
Step 6: Ref=2 | MISS | [4*][1*][2*] | Clock=0 | Faults=6
Step 7: Ref=5 | MISS | [5*][1 ][2 ] | Clock=1 | Faults=7
Step 8: Ref=1 | HIT  | [5*][1*][2 ] | Clock=1 | Faults=7
Step 9: Ref=2 | HIT  | [5*][1*][2*] | Clock=1 | Faults=7
Step 10: Ref=3 | MISS | [5 ][3*][2 ] | Clock=2 | Faults=8
Step 11: Ref=4 | MISS | [5 ][3*][4*] | Clock=0 | Faults=9
Step 12: Ref=5 | HIT  | [5*][3*][4*] | Clock=0 | Faults=9

Resultado do Teste 1:
- Total de referências: 12
- Page Faults: 9  
- Taxa de Hit: 25.00%

=== COMPARAÇÃO COM OUTROS ALGORITMOS ===
Algoritmo Clock: 9 page faults (75.00% miss rate)
Algoritmo FIFO:  10 page faults (83.33% miss rate)  
Algoritmo Ótimo: 7 page faults (58.33% miss rate)

Resultado: Clock teve melhor desempenho que FIFO!

Escolha uma opção: 5

Programa finalizado. Obrigado por usar o simulador!

=== FIM DO EXEMPLO ===
